{"ast":null,"code":"var _jsxFileName = \"/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [geojsonData, setGeojsonData] = useState(null);\n  useEffect(() => {\n    // Fetch GeoJSON data from the Flask API\n    axios.get('http://localhost:5000/get-map').then(response => {\n      setGeojsonData(response.data);\n    }).catch(error => {\n      console.error('Error fetching GeoJSON data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [-33.02, -71.55],\n      zoom: 12,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), geojsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geojsonData,\n        style: {\n          color: 'blue'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i/S00pxZ1vUKGPse9dUzqXJXRmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","axios","jsxDEV","_jsxDEV","App","_s","geojsonData","setGeojsonData","get","then","response","data","catch","error","console","style","height","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\n\nfunction App() {\n  const [geojsonData, setGeojsonData] = useState(null);\n\n  useEffect(() => {\n    // Fetch GeoJSON data from the Flask API\n    axios.get('http://localhost:5000/get-map')\n      .then(response => {\n        setGeojsonData(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching GeoJSON data:', error);\n      });\n  }, []);\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <MapContainer\n        center={[-33.02, -71.55]}\n        zoom={12}\n        style={{ height: '100%' }}\n      >\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n        {geojsonData && (\n          <GeoJSON data={geojsonData} style={{ color: 'blue' }} />\n        )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACAK,KAAK,CAACO,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAI;MAChBH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKY,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9Bd,OAAA,CAACL,YAAY;MACXoB,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAE;MACzBC,IAAI,EAAE,EAAG;MACTJ,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAE1Bd,OAAA,CAACJ,SAAS;QAACqB,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAErElB,WAAW,iBACVH,OAAA,CAACH,OAAO;QAACW,IAAI,EAAEL,WAAY;QAACS,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAO;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACnB,EAAA,CA7BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}