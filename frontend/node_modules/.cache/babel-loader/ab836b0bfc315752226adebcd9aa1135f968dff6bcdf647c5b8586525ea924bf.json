{"ast":null,"code":"var _jsxFileName = \"/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [geojsonData, setGeojsonData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n        const geojsonData = response.data;\n        setGeojsonData(geojsonData);\n      } catch (error) {\n        console.error('Error fetching GeoJSON data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [-33.02, -71.55],\n      zoom: 12,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), geojsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geojsonData,\n        style: {\n          color: 'blue'\n        },\n        onEachFeature: (feature, layer) => {\n          if (feature.properties && feature.properties.name) {\n            layer.bindPopup(feature.properties.name);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i/S00pxZ1vUKGPse9dUzqXJXRmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","axios","jsxDEV","_jsxDEV","App","_s","geojsonData","setGeojsonData","fetchData","response","get","data","error","console","style","height","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","color","onEachFeature","feature","layer","properties","name","bindPopup","_c","$RefreshReg$"],"sources":["/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\n\nfunction App() {\n  const [geojsonData, setGeojsonData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n        const geojsonData = response.data;\n\n        setGeojsonData(geojsonData);\n      } catch (error) {\n        console.error('Error fetching GeoJSON data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <MapContainer\n        center={[-33.02, -71.55]}\n        zoom={12}\n        style={{ height: '100%' }}\n      >\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n        {geojsonData && (\n          <GeoJSON\n            data={geojsonData}\n            style={{ color: 'blue' }}\n            onEachFeature={(feature, layer) => {\n              if (feature.properties && feature.properties.name) {\n                layer.bindPopup(feature.properties.name);\n              }\n            }}\n          />\n        )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,+BAA+B,CAAC;QACjE,MAAMJ,WAAW,GAAGG,QAAQ,CAACE,IAAI;QAEjCJ,cAAc,CAACD,WAAW,CAAC;MAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9Bb,OAAA,CAACL,YAAY;MACXmB,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAE;MACzBC,IAAI,EAAE,EAAG;MACTJ,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAE1Bb,OAAA,CAACJ,SAAS;QAACoB,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAErEjB,WAAW,iBACVH,OAAA,CAACH,OAAO;QACNW,IAAI,EAAEL,WAAY;QAClBQ,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAO,CAAE;QACzBC,aAAa,EAAEA,CAACC,OAAO,EAAEC,KAAK,KAAK;UACjC,IAAID,OAAO,CAACE,UAAU,IAAIF,OAAO,CAACE,UAAU,CAACC,IAAI,EAAE;YACjDF,KAAK,CAACG,SAAS,CAACJ,OAAO,CAACE,UAAU,CAACC,IAAI,CAAC;UAC1C;QACF;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAAClB,EAAA,CAzCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}