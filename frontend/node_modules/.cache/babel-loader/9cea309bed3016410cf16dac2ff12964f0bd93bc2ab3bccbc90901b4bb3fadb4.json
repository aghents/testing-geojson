{"ast":null,"code":"var _jsxFileName = \"/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n        const geojsonData = response.data;\n        const map = L.map('map').setView([-33.02, -71.55], 12);\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Map data © <a href=\"https://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        L.geoJSON(geojsonData, {\n          style: {\n            color: 'blue'\n          }\n        }).addTo(map);\n      } catch (error) {\n        console.error('Error fetching GeoJSON data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","L","axios","jsxDEV","_jsxDEV","App","_s","fetchData","response","get","geojsonData","data","map","setView","tileLayer","attribution","addTo","geoJSON","style","color","error","console","id","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\n\nfunction App() {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n        const geojsonData = response.data;\n\n        const map = L.map('map').setView([-33.02, -71.55], 12);\n\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Map data © <a href=\"https://openstreetmap.org\">OpenStreetMap</a> contributors',\n        }).addTo(map);\n\n        L.geoJSON(geojsonData, {\n          style: { color: 'blue' },\n        }).addTo(map);\n      } catch (error) {\n        console.error('Error fetching GeoJSON data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return <div id=\"map\" style={{ height: '100vh' }} />;\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbN,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,+BAA+B,CAAC;QACjE,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI;QAEjC,MAAMC,GAAG,GAAGX,CAAC,CAACW,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;QAEtDZ,CAAC,CAACa,SAAS,CAAC,oDAAoD,EAAE;UAChEC,WAAW,EAAE;QACf,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;QAEbX,CAAC,CAACgB,OAAO,CAACP,WAAW,EAAE;UACrBQ,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO;QACzB,CAAC,CAAC,CAACH,KAAK,CAACJ,GAAG,CAAC;MACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOH,OAAA;IAAKkB,EAAE,EAAC,KAAK;IAACJ,KAAK,EAAE;MAAEK,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD;AAACrB,EAAA,CAzBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}