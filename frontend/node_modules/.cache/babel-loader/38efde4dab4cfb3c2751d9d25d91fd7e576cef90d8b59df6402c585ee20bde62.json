{"ast":null,"code":"var _jsxFileName = \"/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [points, setPoints] = useState([]);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n\n        // Separate the responses for locations and points\n        const [locationsResponse, pointsResponse] = response.data;\n        setLocations(locationsResponse.features);\n        setPoints(pointsResponse.features);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    let map = null; // Keep track of the map instance\n\n    if (!mapRef.current) {\n      // Map container is not yet rendered, do nothing\n      return;\n    }\n\n    // Remove the previous map instance if it exists\n    if (map) {\n      map.remove();\n    }\n\n    // Initialize the map\n    map = L.map(mapRef.current).setView([0, 0], 2);\n\n    // Add a tile layer to the map\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n      maxZoom: 18\n    }).addTo(map);\n\n    // Add the locations to the map as markers\n    locations.forEach(feature => {\n      const coordinates = feature.geometry.coordinates;\n      const marker = L.marker(coordinates.reverse()).addTo(map);\n    });\n\n    // Add the points to the map as markers\n    points.forEach(feature => {\n      const coordinates = feature.geometry.coordinates;\n      const marker = L.marker(coordinates.reverse()).addTo(map);\n    });\n  }, [locations, points]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '400px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"kce9xQ5l3xTjst+AiwYhATVKBtc=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","L","jsxDEV","_jsxDEV","MapComponent","_s","locations","setLocations","points","setPoints","mapRef","fetchData","response","get","locationsResponse","pointsResponse","data","features","error","console","log","map","current","remove","setView","tileLayer","attribution","maxZoom","addTo","forEach","feature","coordinates","geometry","marker","reverse","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/agusghent/Desktop/testing-geodata/leaflet-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = () => {\n  const [locations, setLocations] = useState([]);\n  const [points, setPoints] = useState([]);\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-map');\n\n        // Separate the responses for locations and points\n        const [locationsResponse, pointsResponse] = response.data;\n\n        setLocations(locationsResponse.features);\n        setPoints(pointsResponse.features);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    let map = null; // Keep track of the map instance\n\n    if (!mapRef.current) {\n      // Map container is not yet rendered, do nothing\n      return;\n    }\n\n    // Remove the previous map instance if it exists\n    if (map) {\n      map.remove();\n    }\n\n    // Initialize the map\n    map = L.map(mapRef.current).setView([0, 0], 2);\n\n    // Add a tile layer to the map\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n      maxZoom: 18\n    }).addTo(map);\n\n    // Add the locations to the map as markers\n    locations.forEach((feature) => {\n      const coordinates = feature.geometry.coordinates;\n      const marker = L.marker(coordinates.reverse()).addTo(map);\n    });\n\n    // Add the points to the map as markers\n    points.forEach((feature) => {\n      const coordinates = feature.geometry.coordinates;\n      const marker = L.marker(coordinates.reverse()).addTo(map);\n    });\n  }, [locations, points]);\n\n  return <div ref={mapRef} style={{ height: '400px', width: '100%' }}></div>;\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE3BF,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,+BAA+B,CAAC;;QAEjE;QACA,MAAM,CAACC,iBAAiB,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAACI,IAAI;QAEzDT,YAAY,CAACO,iBAAiB,CAACG,QAAQ,CAAC;QACxCR,SAAS,CAACM,cAAc,CAACE,QAAQ,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,IAAIwB,GAAG,GAAG,IAAI,CAAC,CAAC;;IAEhB,IAAI,CAACX,MAAM,CAACY,OAAO,EAAE;MACnB;MACA;IACF;;IAEA;IACA,IAAID,GAAG,EAAE;MACPA,GAAG,CAACE,MAAM,CAAC,CAAC;IACd;;IAEA;IACAF,GAAG,GAAGpB,CAAC,CAACoB,GAAG,CAACX,MAAM,CAACY,OAAO,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;IAE9C;IACAvB,CAAC,CAACwB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE,yFAAyF;MACtGC,OAAO,EAAE;IACX,CAAC,CAAC,CAACC,KAAK,CAACP,GAAG,CAAC;;IAEb;IACAf,SAAS,CAACuB,OAAO,CAAEC,OAAO,IAAK;MAC7B,MAAMC,WAAW,GAAGD,OAAO,CAACE,QAAQ,CAACD,WAAW;MAChD,MAAME,MAAM,GAAGhC,CAAC,CAACgC,MAAM,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC,CAACN,KAAK,CAACP,GAAG,CAAC;IAC3D,CAAC,CAAC;;IAEF;IACAb,MAAM,CAACqB,OAAO,CAAEC,OAAO,IAAK;MAC1B,MAAMC,WAAW,GAAGD,OAAO,CAACE,QAAQ,CAACD,WAAW;MAChD,MAAME,MAAM,GAAGhC,CAAC,CAACgC,MAAM,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC,CAACN,KAAK,CAACP,GAAG,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,SAAS,EAAEE,MAAM,CAAC,CAAC;EAEvB,oBAAOL,OAAA;IAAKgC,GAAG,EAAEzB,MAAO;IAAC0B,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5E,CAAC;AAACrC,EAAA,CA3DID,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA6DlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}